import React, {useState} from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import NFTCard from "./NFTCard";


export default function Home() {
  const [wallet, setWalletAddress] = useState("");
  const [collection, setCollectionAddress] = useState("");
  const [NFTs, setNFTs] = useState([]);
  // const api_key = "YURcw1tpeSFzMt21QBN9lIxMKoCGKuv3";
  const api_key = process.env.PROCESS_KEY;
  const [fetchForCollection, setFetchForCollection] = useState(false);

  const fetchNFTs = async () => {
    let nfts;
    console.log("fetching nfts...");
    const baseURL = `https://polygon-mainnet.g.alchemy.com/v2/${api_key}/getNFTs/`;
    var requestOptions = {
      method: "GET",
    };
    if (!collection.length) {
      const fetchURL = `${baseURL}?owner=${wallet}`;
      nfts = await fetch(fetchURL, requestOptions).then((data) => data.json());
    } else {
      console.log("fetching nfts for collection owned by address");
      const fetchURL = `${baseURL}?owner=${wallet}&contractAddresses%5B%5D=${collection}`;
      nfts = await fetch(fetchURL, requestOptions).then((data) => data.json());
    }

    if (nfts) {
      console.log("nfts:", nfts);
      setNFTs(nfts.ownedNfts);
    }
  };

  const fetchNFTsForCollection = async () => {
    if (collection.length) {
      const requestOptions = {
        method: "GET",
      };
      const baseURL = `https://polygon-mainnet.g.alchemy.com/v2/${api_key}/getNFTsForCollection/`;
      const fetchURL = `${baseURL}?contractAddress=${collection}&withMetadata=${"true"}`;
      const nfts = await fetch(fetchURL, requestOptions).then((data) =>
        data.json()
      );
      if (nfts) {
        console.log("NFTs in collection:", nfts);
        setNFTs(nfts.nfts);
      }
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>NFT - Alchemy API </title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <div className='flex flex-col items-center justify-center py-8 gap-y-3'>
          <div className='flex flex-col w-full justify-center items-center gap-y-2'>
            <input
              disabled={fetchForCollection}
              type={"text"}
              placeholder='Add your wallet address'></input>
            <input
              type={"text"}
              placeholder='Add the collection address'></input>
            <label className='text-gray-600 '>
              <input
                onChange={(e) => {
                  setFetchForCollection(e.target.checked);
                }}
                type={"checkbox"}
                className='mr-2'></input>
              Fetch for collection
            </label>
            <button
              className={
                "disabled:bg-slate-500 text-white bg-blue-400 px-4 py-2 mt-3 rounded-sm w-1/5"
              }
              onClick={() => {
                if (fetchForCollection) {
                  fetchNFTsForCollection();
                } else fetchNFTs();
              }}>
              Let's go!{" "}
            </button>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'>
          Powered by{" "}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
